;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(magit-read-file-hist magit-revision-history helm-grep-history helm-ag--command-history helm-ag--helm-history minibuffer-history yes-or-no-p-history counsel-git-grep-history swiper-history ivy-history file-name-history extended-command-history counsel-describe-symbol-history))
(setq helm-grep-history '("ag *.el"))
(setq helm-ag--command-history '("ddd" "dd"))
(setq helm-ag--helm-history '("jav" "dd" "sfs"))
(setq minibuffer-history '("git@github.com:lee5hx/.emacs.d.git" "origin"
;;;  #("modified" 0 8 (face magit-diff-file-heading magit-section [cl-struct-magit-section file "lisp/5hx-ui.el" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil "diff --git lisp/5hx-ui.el lisp/5hx-ui.el
;;; index 643eb1d..91197b1 100644
;;; --- lisp/5hx-ui.el
;;; +++ lisp/5hx-ui.el
;;; " nil [cl-struct-magit-section unstaged nil #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil nil nil [cl-struct-magit-section status nil #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil nil nil nil ([cl-struct-magit-section branch "master" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil nil nil #4 nil] [cl-struct-magit-section untracked nil #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil nil nil #4 ([cl-struct-magit-section file "lisp/#5hx-ELPA-packages.el#" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil nil nil #6 nil] [cl-struct-magit-section file "projectile-bookmarks.eld" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil nil nil #6 nil])] #3)] ([cl-struct-magit-section file "Cask" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil "diff --git Cask Cask
;;; index 1dfca4a..71c3131 100644
;;; --- Cask
;;; +++ Cask
;;; " nil #3 ([cl-struct-magit-section hunk (nil "-14,8" "+14,13") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil] [cl-struct-magit-section hunk (nil "-29,4" "+34,5") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil])] [cl-struct-magit-section file "etc/recentf" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil "diff --git etc/recentf etc/recentf
;;; index 3c705d5..82c72de 100644
;;; --- etc/recentf
;;; +++ etc/recentf
;;; " nil #3 ([cl-struct-magit-section hunk (nil "-1,9" "+1,19") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil] [cl-struct-magit-section hunk (nil "-12,7" "+22,6") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil])] [cl-struct-magit-section file "etc/savehist" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil "diff --git etc/savehist etc/savehist
;;; index 8db9775..496bb90 100644
;;; --- etc/savehist
;;; +++ etc/savehist
;;; " nil #3 ([cl-struct-magit-section hunk (nil "-1,12" "+1,15") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil])] [cl-struct-magit-section file "lisp/5hx-ELPA-packages.el" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil "diff --git lisp/5hx-ELPA-packages.el lisp/5hx-ELPA-packages.el
;;; index 66d38ea..9722dfa 100644
;;; --- lisp/5hx-ELPA-packages.el
;;; +++ lisp/5hx-ELPA-packages.el
;;; " nil #3 ([cl-struct-magit-section hunk (nil "-1,5" "+1,5") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil] [cl-struct-magit-section hunk (nil "-7,7" "+7,7") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil] [cl-struct-magit-section hunk (nil "-22,6" "+22,50") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil])] [cl-struct-magit-section file "lisp/5hx-better-defaults.el" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil "diff --git lisp/5hx-better-defaults.el lisp/5hx-better-defaults.el
;;; index 54fe153..b1ce669 100644
;;; --- lisp/5hx-better-defaults.el
;;; +++ lisp/5hx-better-defaults.el
;;; " nil #3 ([cl-struct-magit-section hunk (nil "-39,8" "+39,11") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #5 nil])] #2)] ([cl-struct-magit-section hunk (nil "-80,7" "+80,7") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil nil nil #2 nil])] keymap (keymap (38 . magit-do-async-shell-command) (117 . magit-unstage) (115 . magit-stage) (67 . magit-commit-add-log) (97 . magit-apply) (remap keymap (magit-revert-no-commit . magit-reverse) (magit-delete-thing . magit-discard) (magit-visit-thing . magit-diff-visit-file)) (C-return . magit-diff-visit-file-worktree) (10 . magit-diff-visit-file-worktree))))
 "5hx ui" "use" "" "122" "100" "11"))
(setq yes-or-no-p-history '("yes" "y" "yes"))
(setq ivy-history '("lisp/test-git.el" #("helm-ag" 0 7 (ivy-index 0)) #("git" 0 3 (ivy-index 0)) #("space" 0 5 (ivy-index 2)) #("power" 0 5 (ivy-index 0)) #("powerl" 0 6 (ivy-index 0)) #("magit" 0 5 (ivy-index 7)) #("pow" 0 3 (ivy-index 0)) "5hx-ui.el"))
(setq file-name-history '(#("/Users/lee5hx/emacs-confs/lee5hx/lisp/test-git.el" 0 49 (ivy-index 0)) #("/Users/lee5hx/Works/" 0 20 (ivy-index 0)) #("/Users/lee5hx/.emacs.d/lisp/,..." 0 32 (ivy-index 0)) #("/Users/lee5hx/.emacs.d/lisp/5hx-ELPA-packages.el" 0 48 (ivy-index 2)) #("/Users/lee5hx/.emacs.d/lisp/" 0 28 (ivy-index 0)) #("/Users/lee5hx/.emacs.d/lisp/5hx-java.el" 0 39 (ivy-index 0)) #("/Users/lee5hx/.emacs.d/Cask" 0 27 (ivy-index 8)) #("/Users/lee5hx/.emacs.d/lisp/5hx-ui.el" 0 37 (ivy-index 6)) "~/.emacs.d/lisp/5hx-keybinds.el" "~/.emacs.d/lisp/5hx-better-defaults.el" "~/.emacs.d/lisp/5hx-better-editor.el" "~/.emacs.d/lisp/5hx-shell.el"))
(setq extended-command-history '(#("helm-projectile-ag" 0 18 (ivy-index 0)) #("helm do ro" 0 10 (ivy-index 0)) #("projectile-ag" 0 13 (ivy-index 1)) #("customize-g" 0 11 (ivy-index 0)) #("helm root" 0 9 (ivy-index 0)) #("helm-ag" 0 7 (ivy-index 15)) #("helm do pr" 0 10 (ivy-index 0)) #("recentf-open" 0 12 (ivy-index 1)) #("recentf" 0 7 (ivy-index 1)) #("recentf-open-f" 0 14 (ivy-index 0)) #("recentf-" 0 8 (ivy-index 0)) #("global-com" 0 10 (ivy-index 0)) #("rece" 0 4 (ivy-index 1)) #("recentf-open-file" 0 17 (ivy-index 0)) #("recent" 0 6 (ivy-index 0)) #("recen" 0 5 (ivy-index 1)) #("ace-wind" 0 8 (ivy-index 1)) #("ace-wi" 0 6 (ivy-index 1)) #("ace-win" 0 7 (ivy-index 1)) #("recentf-o" 0 9 (ivy-index 1)) #("^customize-group" 0 16 (ivy-index 0)) #("^customize-g" 0 12 (ivy-index 0)) #("^recen" 0 6 (ivy-index 1)) #("^rec" 0 4 (ivy-index 1)) #("^cust" 0 5 (ivy-index 7)) #("^rece" 0 5 (ivy-index 1)) #("^ace" 0 4 (ivy-index 5)) #("^recentf-open-files" 0 19 (ivy-index 0)) #("^recentf-open" 0 13 (ivy-index 1)) #("^recent" 0 7 (ivy-index 1)) #("^customize-gr" 0 13 (ivy-index 0)) #("^re" 0 3 (ivy-index 1)) #("^recentf" 0 8 (ivy-index 0)) #("^whitespace-mode" 0 16 (ivy-index 0))))
(setq counsel-describe-symbol-history '(#("global-co" 0 9 (ivy-index 0)) "isearch-message-function" #("ace-win" 0 7 (ivy-index 0)) #("ace-w" 0 5 (ivy-index 2)) #("which-key-si" 0 12 (ivy-index 0)) #("^savehis" 0 8 (ivy-index 7))))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
